<?php

declare(strict_types=1);

namespace Doctrine\Tests\Models\Upsertable;

use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\DiscriminatorColumn;
use Doctrine\ORM\Mapping\DiscriminatorMap;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\GeneratedValue;
use Doctrine\ORM\Mapping\Id;
use Doctrine\ORM\Mapping\InheritanceType;
use Doctrine\ORM\Mapping\Table;

/**
 * @Entity
 * @Table(name="joined_inheritance_root")
 * @InheritanceType("JOINED")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({
 *      "writable" = "JoinedInheritanceWritableColumn",
 *      "nonWritable" = "JoinedInheritanceNonWritableColumn",
 *      "nonInsertable" = "JoinedInheritanceNonInsertableColumn",
 *      "nonUpdatable" = "JoinedInheritanceNonUpdatableColumn"
 * })
 */
#[Entity]
#[Table(name: 'joined_inheritance_root')]
#[InheritanceType('JOINED')]
#[DiscriminatorColumn(name: 'discr', type: 'string')]
#[DiscriminatorMap([
    'writable' => JoinedInheritanceWritableColumn::class,
    'nonWritable' => JoinedInheritanceNonWritableColumn::class,
    'nonInsertable' => JoinedInheritanceNonInsertableColumn::class,
    'nonUpdatable' => JoinedInheritanceNonUpdatableColumn::class,
])]
class JoinedInheritanceRoot
{
    /**
     * @var int
     * @Id
     * @GeneratedValue
     * @Column(type="integer")
     */
    #[Id]
    #[GeneratedValue]
    #[Column(type: 'integer')]
    public $id;

    /**
     * TODO: fix:
     *     SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column "rootwritablecontent" of relation "joined_inheritance_root" violates not-null constraint
     *     DETAIL:  Failing row contains (1, null, writable).
     * from query:
     *     INSERT INTO joined_inheritance_root (id, rootWritableContent, discr) VALUES (?, ?, ?)
     * generated by JoinedSubclassPersister->getInsertSQL() but columns overrided - JoinedSubclassPersister::getInsertColumnList()
     * получается добавляет столбец в инсерт, но для него не заполнено значение, поэтому видать заполняется дефолтным null т.к. insertable, но при этом не обращается внимание на generated="ALWAYS"
     *
     * После добавления проверки на isset($this->class->fieldMappings[$name]['generated']) в JoinedSubclassPersister::getInsertColumnList()
     * возник мисматч количества параметров т.к. в $rootTableStmt начинаются биндится параметры из дочерней сущности :(
     * напр., vendor/doctrine/dbal/src/Statement.php:118: 3 => 'nonUpdatable'
     * параметры берутся из AbstractEntityInheritancePersister::prepareInsertData()
     *
     * После добавления дефолтного значения на стороне php:
     *     SQLSTATE[42703]: Undefined column: 7 ERROR:  column "rootwritablecontent" does not exist
     *     LINE 1: SELECT rootWritableContent, nonUpdatableContent FROM joined_inheritance_non_updatable_column WHERE id = ?
     * т.е. пытается получить root энтити столбец с дочерней таблицы
     *
     * @var string
     * @Column(type="string", insertable=true, updatable=true, options={"default": "dbDefautWritable"}, generated="ALWAYS")
     */
    #[Column(type: 'string', insertable: true, updatable: true, options: ['default' => 'dbDefaultWritable'], generated: 'ALWAYS')]
    public $rootWritableContent;

    ///**
    // * TODO: try fetch rootNonInsertableContent in root query JoinedSubclassPersister::assignDefaultVersionAndUpsertableValues() after insert root and sub- tables
    // *     SQLSTATE[42703]: Undefined column: 7 ERROR:  column "rootNonInsertableContent" does not exist
    // *     LINE 1: SELECT rootNonInsertableContent, writableContent FROM joined_inheritance_writable_column WHERE id = ?
    // * т.е. пытается получить root энтити столбец с дочерней таблицы
    // *
    // * @var string
    // * @Column(type="string", insertable=false, updatable=true, options={"default": "dbDefautNonInsertable"}, generated="ALWAYS")
    // */
    //#[Column(type: 'string', insertable: false, updatable: true, options: ['default' => 'dbDefaultNonInsertable'], generated: 'ALWAYS')]
    //public $rootNonInsertableContent;
    //
    ///**
    // * TODO:
    // *     SQLSTATE[42703]: Undefined column: 7 ERROR:  column "rootnonwritablecontent" does not exist
    // *     LINE 1: SELECT rootNonWritableContent, nonUpdatableContent FROM joined_inheritance_non_updatable_column WHERE id = ?
    // * т.е. пытается получить root энтити столбец с дочерней таблицы
    // *
    // * @var string
    // * @Column(type="string", insertable=false, updatable=false, options={"default": "dbDefautNonWritable"}, generated="ALWAYS")
    // */
    //#[Column(type: 'string', insertable: false, updatable: false, options: ['default' => 'dbDefaultNonWritable'], generated: 'ALWAYS')]
    //public $rootNonWritableContent;
    //
    ///**
    // * TODO:
    // *     SQLSTATE[23502]: Not null violation: 7 ERROR:  null value in column "rootnonupdatablecontent" of relation "joined_inheritance_root" violates not-null constraint
    // *     DETAIL:  Failing row contains (4, null, nonUpdatable).
    // * from query:
    // *     INSERT INTO joined_inheritance_root (id, rootNonUpdatableContent, discr) VALUES (?, ?, ?)
    // *
    // * @var string
    // * @Column(type="string", insertable=true, updatable=false, options={"default": "dbDefautNonUpdatable"}, generated="ALWAYS")
    // */
    //#[Column(type: 'string', insertable: true, updatable: false, options: ['default' => 'dbDefaultNonUpdatable'], generated: 'ALWAYS')]
    //public $rootNonUpdatableContent;
}
